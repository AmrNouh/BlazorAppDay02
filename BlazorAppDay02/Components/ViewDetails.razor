@page "/ProductDetails/{id:int}"

@if (Product is not null)
{
    <div class="col-lg-8 col-md-10 col-sm-11 bg-white border-0 align-self-center mx-auto mt-4" style="border-radius: 0.25rem;">
        <div class="row">
            <div class="preview col-md-6 col-sm-12 p-4">

                <div class="preview-pic tab-content">
                    <div class="tab-pane active" id="pic-1"><img src="@Product.Image" /></div>
                    <div class="tab-pane" id="pic-2"><img src="@Product.Image" /></div>
                    <div class="tab-pane" id="pic-3"><img src="@Product.Image" /></div>
                    <div class="tab-pane" id="pic-4"><img src="@Product.Image" /></div>
                    <div class="tab-pane" id="pic-5"><img src="@Product.Image" /></div>
                </div>
                <ul class="preview-thumbnail nav nav-tabs">
                    <li class="active"><a data-target="#pic-1" data-toggle="tab"><img src="@Product.Image" /></a></li>
                    <li><a data-target="#pic-2" data-toggle="tab"><img src="@Product.Image" /></a></li>
                    <li><a data-target="#pic-3" data-toggle="tab"><img src="@Product.Image" /></a></li>
                    <li><a data-target="#pic-4" data-toggle="tab"><img src="@Product.Image" /></a></li>
                    <li><a data-target="#pic-5" data-toggle="tab"><img src="@Product.Image" /></a></li>
                </ul>
            </div>

            <div class="details col-md-6 col-sm-12 py-4 bg-dark" style="border-radius: 0 0.25rem 0.25rem 0;">
                <h3 class="product-title text-white">@Product.Name</h3>
                <div class="rating">
                    <div class="stars">
                        <span class="fa fa-star checked"></span>
                        <span class="fa fa-star checked"></span>
                        <span class="fa fa-star checked"></span>
                        <span class="fa fa-star text-white"></span>
                        <span class="fa fa-star text-white"></span>
                    </div>
                    <span class="review-no text-white">41 reviews</span>
                </div>
                <p class="product-description text-white">@Product.Description</p>
                <h4><span class="text-white">current price:</span> <span class="text-warning">$@Product.Price</span></h4>
                <p class="vote text-info"><strong>91%</strong> of buyers enjoyed this product! <strong>(87 votes)</strong></p>
                <div class="action">
                    <button class="add-to-cart btn btn-default" type="button" @onclick="AddToCart">add to cart</button>
                    <button class="like btn btn-default" type="button"><span class="fa fa-heart"></span></button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p class="alert alert-danger h-25 w-75" role="alert">Can't Load Products Details</p>
}

@code {
    private async Task AddToCart()
    {
        var cart = await LocalStorageService.GetItem<List<CartProduct>>("cart");
        if (cart == null)
        {
            cart = new List<CartProduct>();
            cart.Add(new CartProduct
                {
                    Id = Product.Id,
                    Name = Product.Name,
                    OrderCount = 1,
                    Price = Product.Price,
                    Image = Product.Image,
                    Category = Product.CategoryName
                });
        }
        else
        {
            var isExists = cart.Select(x => x.Id).Contains(Product.Id);
            if (isExists)
            {
                var product = cart.FirstOrDefault(x => x.Id == Product.Id);
                product.OrderCount++;

            }
            else
            {
                cart.Add(new CartProduct
                    {
                        Id = Product.Id,
                        Name = Product.Name,
                        OrderCount = 1,
                        Price = Product.Price,
                        Image = Product.Image,
                        Category = Product.CategoryName
                    });
            }
        }
        StateHasChanged();
        await LocalStorageService.SetItem<List<CartProduct>>("cart", cart);
        NavigationManager.NavigateTo("ShoppingCart");
    }
    }